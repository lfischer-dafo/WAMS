@* https://github.com/dotnet/blazor-samples/blob/main/8.0/BlazorWebAssemblyStandaloneWithIdentity/BlazorWasmAuth/Components/Identity/Login.razor *@
@page "/Login"
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@using WAMS.Backend.Data
@using WAMS.Backend.Model.ViewModels
@using WAMS.Components.Model
@inject IDbContextFactory<AppDbContext> AppDbContextFactory
@inject SignInManager<User> SignInManager

<style>
   .form-signin {
      width: 100%;
      max-width: 550px;
      padding: 15px;
      margin: auto;
   }
</style>

<div class="text-center">
   <main class="form-signin">
      <img class="mb-4" src="https://getbootstrap.com/docs/5.1/assets/brand/bootstrap-logo.svg" alt="" width="72" height="57">
      <h1 class="h3 mb-3 fw-normal">Anmelden</h1>

      <div class="form-floating mb-3">
         <InputText type="email" class="form-control" @bind-value="Model.UserName" placeholder="Vorname.Nachname.Klasse" />
         <ValidationMessage For="() => Model.UserName" />
         <label for="floatingInput">Benutzername:</label>
      </div>
      <div class="form-floating mb-3">
         <InputText type="password" class="form-control" @bind-value="Model.Password" placeholder="Password" />
         <ValidationMessage For="() => Model.Password" />
         <label for="floatingPassword">Password:</label>
      </div>

      <div class="mb-3">
         <NavLink href="/"> Password vergessen?</NavLink>
      </div>
      <button class="w-100 btn btn-lg btn-primary" @onclick="OnClick_Login">Anmelden</button>
   </main>
</div>

@code {

   [CascadingParameter]
   public HttpContext? HttpContext { get; set; } = default!;

   [SupplyParameterFromForm]
   public LoginViewModel Model { get; set; } = new();

   protected override async Task OnInitializedAsync()
   {
      if (HttpMethods.IsGet(HttpContext.Request.Method))
      {
         await SignInManager.SignOutAsync();
      }
   }

   public async Task<int> LoginUser()
   {
      var result = await SignInManager.PasswordSignInAsync(Model.UserName, Model.Password, false, false);
      if (result.Succeeded)
      {
         return 0;
      }
      return -1;
   }

   private async void OnClick_Login()
   {
      int f = await LoginUser();
   }
}
